"""
Django settings for setting_test project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from my_settings import DATABASES, SECRET_KEY
import pymysql


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#현재 디렉토리가 있는 위치 PATH

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# 디버그모드 활성화 (에러메세지가 크게 반환됌) <False시 비활성화>

ALLOWED_HOSTS = ['*']
# IP주소들을 적는단다 , default는 공백 , *는 모두 다 받게한다.

# Application definition

INSTALLED_APPS = [
    #'django.contrib.admin',
    #'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders'
]
# 웹통시시 필요한 앱들 장고에서 설치해줌
# 필요한 앱을 설치시 여기서 경로를 추가해야한다.
# 장고에서 가장 유용한 기능이지만 스스로 구현하기위해 주석

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    #'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
]

# 클라이언트가 요청을 보낼시 미들웨어에서 방화벽or여가장치성 역할을 해주며 통과하지못할경우 요청이 이루어지지 않음
# 설치한 앱중 미들웨어 역할을 하는 앱이 있을경우 여기에 추가를 해줘야한다.

ROOT_URLCONF = 'initial-setting.urls'
# 외부에서 들어오는 모든 url들이 여기에 나와있는 곳으로 들어와서 여기서 나눠지게된다.
# 프로젝트명/urls.py 이다.

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# 템플릿 기능 API 생성하는 백엔드한테는 필요 X

WSGI_APPLICATION = 'initial-setting.wsgi.application'
# 

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = DATABASES

# model.py와 상호작용할 DB를 정해주고 이름도 정해준다.

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# 비밀번호와 사용자 계정에 대해 관리하는부분 

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'
# django가 가지고 있는 시간

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
# 정적파일들이 들어올 root를 지정하는것

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# DB에 자동으로 필드를 기입할수있게해주는 기능

### 직접 추가한것들


pymysql.install_as_MySQLdb()

##CORS
CORS_ORIGIN_ALLOW_ALL=True
CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
)

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)

APPEND_SLASH = False       
# Url로 접속시 마지막에 '/' 가 붙지 않도록 하는 설정 (True설정시 자동으로 붙는다.)
#REST full API 구현시 마지막에 추가되는 것들이 있기에 '/'가 자동으로 붙으면 오류가난다.
